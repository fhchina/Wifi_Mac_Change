import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

static def buildTime() {
    def df = new SimpleDateFormat("yyyyMMddkkmmss")
    df.setTimeZone(TimeZone.getTimeZone("GMT-05:00"))
    return df.format(new Date())
}

def versionMajor = "1"
def versionMinor = "1"
def versionPatch = "17"
def versionBuild = "${buildTime()}"
def versionNameLong = "$versionMajor" + "." + "$versionMinor" + "." + "$versionPatch" + "." + "$versionBuild";
//def PASSWORD = "password"

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId "hom.ourhome.asm301.wifimacchange"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 1
        versionName "$versionNameLong";
    }
    signingConfigs {
        release {
            //storeFile file('C:/Users/candikane13/Downloads/asm301/AndroidStudioProjects/asm301.keystore')
            //storePassword "$PASSWORD"
            //keyAlias "alias_name"
            //keyPassword "$PASSWORD"
        }
        debug {
            //storeFile file('C:/Users/candikane13/Downloads/asm301/AndroidStudioProjects/asm301.keystore')
            //storePassword "$PASSWORD"
            //keyAlias "alias_name"
            //keyPassword "$PASSWORD"
        }
    }
    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            zipAlignEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.debug
        }
    }
    productFlavors {
        Free {
            versionName "$versionNameLong" + "-" + "Free";
        }
        Pro {
            versionName "$versionNameLong" + "-" + "Pro";
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def OrigApkName = project.name + "-" + variant.flavorName + "-" + variant.buildType.name + ".apk"
            def NewApkName = "Wifi_Mac_Change" + "-" + variant.flavorName + "-v" + defaultConfig.versionName + "-" + variant.buildType.name.toUpperCase() + ".apk"
            output.outputFile = new File(
                    output.outputFile.parent, output.outputFile.name.replace(
                    "$OrigApkName",
                    "$NewApkName"))
        }
    }
}
dependencies {
    //compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':RootTools')
    compile 'com.android.support:appcompat-v7:25.3.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:25.3.0'
    testCompile 'junit:junit:4.12'
}